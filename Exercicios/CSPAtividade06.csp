
VALORES_MEMORIA = {0..9}
COMPONENTES = {1..3}

channel ler, escrever : COMPONENTES.VALORES_MEMORIA
channel esquerda, direita

-- Processo Memoria: controla o acesso a um inteiro entre 0 e 10 permitindo a leitura ou escrita de somente um componente por vez.
Memoria(valor) =
    ler?componente!valor -> Memoria(valor)
    []
    escrever?componente?novo_valor -> Memoria(novo_valor)

-- Processo C1: ele pode ler a memória e guardar em um parâmetro do processo, ou caso este parâmetro seja maior que cinco ele deve imprimir o evento "esquerda", e caso ele seja menor ou igual a cinco deve imprimir o evento "direita".
C1(valor) =
    ler!1?valor ->
        (if valor > 5 then 
            esquerda -> SKIP
        else 
            direita -> SKIP
        )

-- Processo C2: pode ler o valor da memória, e caso ele seja maior que cinco, ele decrementa em um o valor na memória, caso ele seja menor  ou igual a cinco ele incrementa em um o valor da memória.
C2(valor) =
    ler!2?valor ->
        (if valor > 5 then 
            (valor-1 >= 0) & escrever!2!valor -> C2(valor-1)
        else 
            (valor+1 <= 9) & escrever!2!valor ->  C2(valor+1)
        )

-- Processo C3: pode ler o valor da memória e caso ele seja menor ou igual a cinco, ele decrementa em um o valor da memória, e caso ele seja maior que cinco ele incrementa em um o valor da memória.
C3(valor) =
    ler!3?valor ->
        (if valor <= 5 then 
            (valor-1 >= 0) & escrever!3!valor -> C3(valor-1)
        else 
            (valor+1 <= 9) & escrever!3!valor -> C3(valor+1)
        )

-- Processo principal
MAIN = 
    ( C1(0) ||| C2(0) ||| C3(0) )
    []
    Memoria(0)


